{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/manikandan/Desktop/react/nextjs/meetup/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from 'mongodb';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 14\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n  if (client) {\n    console.log(\"**successfull***\");\n  } else {\n    console.log(\"error in db\");\n  }\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const dbmeetups = await meetupsCollection.find().toArray();\n  return {\n    props: {\n      meetups: dbmeetups.map(meetup => ({\n        id: meetup._id.toString(),\n        image: meetup.image,\n        address: meetup.address,\n        title: meetup.title\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/manikandan/Desktop/react/nextjs/meetup/pages/index.js"],"names":["MeetupList","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","console","log","db","meetupsCollection","collection","dbmeetups","find","toArray","map","meetup","id","_id","toString","image","address","title","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAItB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CALH;;AAOA,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACjB,mGADiB,CAArB;;AAGE,MAAGD,MAAH,EAAU;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAFD,MAEK;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAED;;AACD,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAxB;AAEF,SAAM;AACFZ,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAGS,SAAS,CAACG,GAAV,CAAcC,MAAM,KAAI;AAC9BC,QAAAA,EAAE,EAAGD,MAAM,CAACE,GAAP,CAAWC,QAAX,EADyB;AAE9BC,QAAAA,KAAK,EAAGJ,MAAM,CAACI,KAFe;AAG9BC,QAAAA,OAAO,EAAGL,MAAM,CAACK,OAHa;AAI9BC,QAAAA,KAAK,EAAGN,MAAM,CAACM;AAJe,OAAJ,CAApB;AADP,KADL;AAWFC,IAAAA,UAAU,EAAG;AAXX,GAAN;AAaH;AAGD,eAAetB,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport {MongoClient} from 'mongodb'\n\n\n\nconst HomePage = (props) => {\n\n  \n\n      return <MeetupList meetups={props.meetups}/>\n  }\n\nexport async function getStaticProps() {\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\"\n      )\n      if(client){\n        console.log(\"**successfull***\")\n      }else{\n        console.log(\"error in db\")\n       \n      }\n      const db = client.db();\n  \n      const meetupsCollection = db.collection(\"meetups\");\n\n      const dbmeetups = await meetupsCollection.find().toArray();\n  \n    return{\n        props :{\n            meetups : dbmeetups.map(meetup =>({ \n                id : meetup._id.toString(),\n                image : meetup.image,\n                address : meetup.address,\n                title : meetup.title\n                \n\n            }))\n        },\n        revalidate : 1\n    }\n}\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}