{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/manikandan/Desktop/react/nextjs/meetup/pages/[meetId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\n\nconst MeetDetail = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetId = context.params.meetId;\n  const client = await MongoClient.connect(\"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selmeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetId)\n  });\n  return {\n    props: {\n      meetupData: {\n        image: selmeetup.image,\n        id: selmeetup._id.toString(),\n        description: selmeetup.description,\n        title: selmeetup.title,\n        address: selmeetup.address\n      }\n    }\n  };\n}\nexport default MeetDetail;","map":{"version":3,"sources":["/home/manikandan/Desktop/react/nextjs/meetup/pages/[meetId]/index.js"],"names":["MongoClient","ObjectId","Fragment","MeetupDetail","Head","MeetDetail","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetId","toString","getStaticProps","context","selmeetup","findOne","id"],"mappings":";;AAAA,SAAQA,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAwB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGA,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH1B;AAIA,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ9B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;AAmBA,OAAO,eAAeG,cAAf,GAAgC;AAGnC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACjB,mGADiB,CAArB;AAIE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAOC,OAAO,GAAE,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAG;AAAP,GAA1B,EAAqCC,OAArC,EAAtB;AAGF,SAAM;AACFC,IAAAA,QAAQ,EAAG,KADT;AAEFC,IAAAA,KAAK,EAAGL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC3BC,MAAAA,MAAM,EAAG;AACLC,QAAAA,MAAM,EAAGF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADJ;AADkB,KAAL,CAAlB;AAFN,GAAN;AASH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,MAAM,GAAGG,OAAO,CAACJ,MAAR,CAAeC,MAA9B;AAEA,QAAMd,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACjB,mGADiB,CAArB;AAIE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,SAAS,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAAGnB,QAAQ,CAAC0B,MAAD;AAAf,GAA1B,CAAxB;AAEF,SAAM;AACFrB,IAAAA,KAAK,EAAG;AACJC,MAAAA,UAAU,EAAG;AACTG,QAAAA,KAAK,EAAGqB,SAAS,CAACrB,KADT;AAETuB,QAAAA,EAAE,EAAGF,SAAS,CAACX,GAAV,CAAcQ,QAAd,EAFI;AAGTnB,QAAAA,WAAW,EAAGsB,SAAS,CAACtB,WAHf;AAITD,QAAAA,KAAK,EAAGuB,SAAS,CAACvB,KAJT;AAKTG,QAAAA,OAAO,EAAGoB,SAAS,CAACpB;AALX;AADT;AADN,GAAN;AAYH;AAED,eAAeN,UAAf","sourcesContent":["import {MongoClient,ObjectId} from 'mongodb'\nimport { Fragment } from 'react';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\"\n\nconst MeetDetail = (props) => {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n        <meta name=\"description\"content={props.meetupData.description}/>\n      </Head>\n      <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n    </Fragment>\n\n  );\n\n};\n\nexport async function getStaticPaths() {\n\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\"\n      )\n\n      const db = client.db();\n  \n      const meetupsCollection = db.collection(\"meetups\");\n\n      const  meetups= await meetupsCollection.find({},{_id : 1}).toArray()\n\n\n    return{\n        fallback : false,\n        paths : meetups.map(meetup => ({\n            params : {\n                meetId : meetup._id.toString()\n            }\n        }))\n       \n}\n}\n\n\nexport async function getStaticProps(context) {\n\n    const meetId = context.params.meetId\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\"\n      )\n\n      const db = client.db();\n  \n      const meetupsCollection = db.collection(\"meetups\");\n\n      const selmeetup = await meetupsCollection.findOne({_id : ObjectId(meetId) })\n\n    return{\n        props : {\n            meetupData : {\n                image : selmeetup.image,\n                id : selmeetup._id.toString(),\n                description : selmeetup.description,\n                title : selmeetup.title,\n                address : selmeetup.address\n\n            }\n        }\n    }\n}\n\nexport default MeetDetail;\n"]},"metadata":{},"sourceType":"module"}