{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/manikandan/Desktop/react/nextjs/meetup/pages/[meetId]/index.js\",\n    _this = this;\n\nimport { Fragment } from 'react';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\n\nvar MeetDetail = function MeetDetail(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetDetail;\nexport var __N_SSG = true;\nexport default MeetDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetDetail\");","map":{"version":3,"sources":["/home/manikandan/Desktop/react/nextjs/meetup/pages/[meetId]/index.js"],"names":["Fragment","MeetupDetail","Head","MeetDetail","props","meetupData","title","description","image","address"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAwB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAlD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGA,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH1B;AAIA,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ9B;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CAjBD;;KAAMJ,U;;AAyEN,eAAeA,UAAf","sourcesContent":["import {MongoClient,ObjectId} from 'mongodb'\nimport { Fragment } from 'react';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\"\n\nconst MeetDetail = (props) => {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n        <meta name=\"description\"content={props.meetupData.description}/>\n      </Head>\n      <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n    </Fragment>\n\n  );\n\n};\n\nexport async function getStaticPaths() {\n\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\"\n      )\n\n      const db = client.db();\n  \n      const meetupsCollection = db.collection(\"meetups\");\n\n      const  meetups= await meetupsCollection.find({},{_id : 1}).toArray()\n\n\n    return{\n        fallback : false,\n        paths : meetups.map(meetup => ({\n            params : {\n                meetId : meetup._id.toString()\n            }\n        }))\n       \n}\n}\n\n\nexport async function getStaticProps(context) {\n\n    const meetId = context.params.meetId\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://Manikandan:Mani@1234@cluster0.l1fjx.mongodb.net/meetups?retryWrites=true&w=majority\"\n      )\n\n      const db = client.db();\n  \n      const meetupsCollection = db.collection(\"meetups\");\n\n      const selmeetup = await meetupsCollection.findOne({_id : ObjectId(meetId) })\n\n    return{\n        props : {\n            meetupData : {\n                image : selmeetup.image,\n                id : selmeetup._id.toString(),\n                description : selmeetup.description,\n                title : selmeetup.title,\n                address : selmeetup.address\n\n            }\n        }\n    }\n}\n\nexport default MeetDetail;\n"]},"metadata":{},"sourceType":"module"}